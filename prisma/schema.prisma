// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model CricketFarm {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  location  String
  latitude  Float
  longitude Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BreedingPen BreedingPen[]

  @@map("cricketFarm")
}

model BreedingPen {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  breedingPenCode String
  cricketType     String

  cricketFarmId   String            @db.ObjectId
  cricketFarm     CricketFarm       @relation(fields: [cricketFarmId], references: [id], onDelete: Cascade)
  CricketFeedData CricketFeedData[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("breedingPen")
}

model CricketFeedData {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  productionCycle  Int
  feedAmountUsed   Int
  feedSource       String
  harvestStartDate DateTime
  harvestEndDate   DateTime?
  cycleStatus      String
  cycleAge         Int
  feedConsumption  Int
  cricketYield     Int
  comment          String?

  BreedingPen   BreedingPen? @relation(fields: [breedingPenId], references: [id], onDelete: Cascade)
  breedingPenId String       @db.ObjectId
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cricketFeedData")
}